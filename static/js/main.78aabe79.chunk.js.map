{"version":3,"sources":["thumbnail.module.css","image.module.css","clock.module.css","amazon.png","ProductData.js","Thumbnail.js","Image.js","Clock.js","App.js","Utils.js","reportWebVitals.js","index.js"],"names":["module","exports","ProductData","title","description","colorOptions","styleName","imageUrl","featureList","Object","freeze","Thumbnail","props","className","curr","src","classes","thumbnail_selected","thumbnail","alt","onClick","Image","image","Clock","state","time","Date","this","update","setInterval","setState","clearInterval","timeDisplay","toLocaleTimeString","Component","App","colourOptions","isTimeClicked","isHeartRateClicked","onClickShowTime","prop","onClickShowHeartRate","onThumbnailImgClick","arr","thumbnails","undefined","length","map","item","pos","img","timeButton","heartRateButton","amazon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78aabe79.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"thumbnail_thumbnail__2--8P\",\"thumbnail_selected\":\"thumbnail_thumbnail_selected__2FuIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"image_image__1BsHw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeDisplay\":\"clock_timeDisplay__2dH2a\"};","export default __webpack_public_path__ + \"static/media/amazon.ad9462dd.png\";","\nimport React from 'react';\n\nconst ProductData = {\n    title: 'FitBit 19 - The Smartest Watch',\n    description: 'Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor Lorem ipsum dolor.',\n    colorOptions: [\n        {\n            styleName: 'Black Strap',\n            imageUrl: 'https://imgur.com/iOeUBV7.png'\n        },\n        {\n            styleName: 'Red Strap',\n            imageUrl: 'https://imgur.com/PTgQlim.png'\n        },\n        {\n            styleName: 'Blue Strap',\n            imageUrl: 'https://imgur.com/Mplj1YR.png'\n        },\n        {\n            styleName: 'Purple Strap',\n            imageUrl: 'https://imgur.com/xSIK4M8.png'\n        },\n    ],\n    featureList: [\n        \"Time\", \"Heart Rate\"\n    ]\n}\n\nObject.freeze(ProductData); //This line of code just makes your object as a constant. No values can be updated.\n\nexport default ProductData;","import React from 'react';\nimport classes from './thumbnail.module.css';\n\nconst Thumbnail = (props) => {\n\n\n    return (\n        // checks if the image has been selected or not\n        <div className={props.curr === props.src ? classes.thumbnail_selected : classes.thumbnail}>\n            <img src={props.src} alt={props.alt} onClick={props.onClick}/> \n        </div>);\n}\n\nexport default Thumbnail;","import React from 'react';\nimport classes from './image.module.css';\n\nconst Image = (props) => {\n\n    // onLikeBtnClick = () => { \n    //     this.setState((prevState, prop) => {\n    //         return { likeCount: prevState.likeCount + 1 };\n    //     });\n    // }\n    return (\n        <div className={classes.image}>\n            <img src={props.src} alt={props.alt}/> \n        </div>);\n}\n\nexport default Image;","import React, { Component } from 'react';\nimport classes from './clock.module.css';\n\nclass Clock extends Component{\n    constructor() {\n        super();\n        this.state = { time: new Date() }; // initialise the state\n    }\n\n    componentDidMount() { // create the interval once component is mounted\n        this.update = setInterval(() => {\n            this.setState({ time: new Date() });\n        }, 1 * 1000); // every 1 seconds\n    }\n\n    componentWillUnmount() { // delete the interval just before component is removed\n        clearInterval(this.update);\n    }\n\n    render() {\n        const { time } = this.state; // retrieve the time from state\n\n        return (<div className={classes.timeDisplay}>\n            <h1>\n                {/* print the string prettily */}\n                {time.toLocaleTimeString()}\n            </h1>\n        </div>);\n    }\n}\n\nexport default Clock;","import amazon from './amazon.png';\nimport React, { Component } from 'react';\nimport './App.css';\nimport ProductData from './ProductData';\nimport { isArrayEmpty } from './Utils';\nimport Thumbnail from './Thumbnail';\nimport Image from './Image';\nimport Clock from './Clock';\n\nclass App extends Component {\n\n  state = {\n    colourOptions: ProductData.colorOptions,\n    isTimeClicked: false,\n    isHeartRateClicked: false,\n    image: \"https://imgur.com/iOeUBV7.png\"\n  }\n\n  \n // delete the interval just before component is removed\ncomponentWillUnmount() {\n    clearInterval(this.update);\n}\n\n  onClickShowTime = (prop) => {\n    this.setState({ isTimeClicked: true,isHeartRateClicked: false});\n\n  };\n\n  onClickShowHeartRate = (prop) => {\n    this.setState({ isTimeClicked: false,isHeartRateClicked: true});\n  };\n\n  onThumbnailImgClick = (src) => {\n    this.setState({ image: src });\n        };\n\n  render() {\n\n      const thumbnails = isArrayEmpty(this.state.colourOptions) ? [] : this.state.colourOptions.map((item, pos) => {\n        return (\n          <Thumbnail src={item.imageUrl} key={pos} alt={item.styleName} onClick={() => this.onThumbnailImgClick(item.imageUrl)} curr={this.state.image} />\n        )\n      });\n\n      const img = <Image src={this.state.image} />;\n    \n\n      let timeButton = this.state.isTimeClicked ? \"blackButton\" : \"whiteButton\";\n      let heartRateButton = this.state.isHeartRateClicked ? \"blackButton\" : \"whiteButton\";\n\n\n      return (\n        <div className=\"App\">\n          <div className=\"Navigation-Bar\"><img src={amazon}></img></div>\n          <br></br>\n          <div className=\"container\">\n            <div className=\"left-inner-container\">\n              {this.state.isTimeClicked ? <Clock /> : \"\"}\n              {img}\n            </div>\n            <div className=\"right-inner-container\">\n              <div className=\"right-inner-colour\">\n                <h1>{ProductData.title}</h1>\n                <p>{ProductData.description}</p>\n                <br></br>\n                <h2>Select Colour</h2>\n                <br></br>\n                <div className=\"thumbnail-wrapper\">\n                  {thumbnails}\n                </div>\n              </div>\n              <div className=\"right-inner-feature\">\n                <h2>Features</h2>\n                <button className={timeButton}\n                  onClick={() => this.onClickShowTime(this)}>\n                  Time\n                  </button>\n                <button className={heartRateButton}\n                  onClick={() => this.onClickShowHeartRate(this)}>\n                  Heart Rate\n                  </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    };\n  }\n\nexport default App;\n","\n//Export statement can be written at the block optionally\n/* export */ const isArrayEmpty = (arr) => { \n    if (arr !== undefined && arr !== null && arr.length > 0) { \n        return false;\n    }\n    return true;\n}\n\nconst dumpLogs = (message) => { \n    console.log(message)\n}\n\nexport {isArrayEmpty, dumpLogs}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}